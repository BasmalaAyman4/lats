import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { getDictionary } from "@/lib/i18n/dictionaries";
import { Alexandria } from 'next/font/google';
import SessionProviderWrapper from "@/components/common/SessionProviderWrapper";
import Head from "next/head";
import Header from "@/components/Layout/Header";

const alexandria = Alexandria({
  weight: ['200', '400', '700'],
  subsets: ['latin'],
  display: 'swap',
});

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

interface RootLayoutProps {
  children: React.ReactNode;
  params: Promise<{
    locale: string;
  }>;
}

interface Dictionary {
  [key: string]: any;
}

export default async function RootLayout({
  children,
  params
}: RootLayoutProps): Promise<JSX.Element> {
  const { locale } = await params;
  const dictionary: Dictionary = await getDictionary(locale);

  return (
    <html lang={locale} dir={locale === 'ar' ? 'rtl' : 'ltr'}>
      <head>
        <link
          href="https://fonts.googleapis.com/css2?family=Quicksand:wght@300..700&display=swap"
          rel="stylesheet"
        />
      </head>
      <body
        style={{ margin: 0 }}
        suppressHydrationWarning={true}
        className={alexandria.className}
      >
        <SessionProviderWrapper>
          <Header dictionary={dictionary} locale={locale} />
          {children}
        </SessionProviderWrapper>
      </body>
    </html>
  );
}